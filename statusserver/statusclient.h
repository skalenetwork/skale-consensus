/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_STATUSCLIENT_H_
#define JSONRPC_CPP_STUB_STATUSCLIENT_H_

#include <jsonrpccpp/client.h>

class StatusClient : public jsonrpc::Client {
public:
    StatusClient( jsonrpc::IClientConnector& conn,
        jsonrpc::clientVersion_t type = jsonrpc::JSONRPC_CLIENT_V2 )
        : jsonrpc::Client( conn, type ) {}

    std::string consensus_getTPSAverage() throw( jsonrpc::JsonRpcException ) {
        Json::Value p;
        p = Json::nullValue;
        Json::Value result = this->CallMethod( "consensus_getTPSAverage", p );
        if ( result.isString() )
            return result.asString();
        else
            throw jsonrpc::JsonRpcException(
                jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString() );
    }
    std::string consensus_getBlockSizeAverage() throw( jsonrpc::JsonRpcException ) {
        Json::Value p;
        p = Json::nullValue;
        Json::Value result = this->CallMethod( "consensus_getBlockSizeAverage", p );
        if ( result.isString() )
            return result.asString();
        else
            throw jsonrpc::JsonRpcException(
                jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString() );
    }
    std::string consensus_getBlockTimeAverageMs() throw( jsonrpc::JsonRpcException ) {
        Json::Value p;
        p = Json::nullValue;
        Json::Value result = this->CallMethod( "consensus_getBlockTimeAverageMs", p );
        if ( result.isString() )
            return result.asString();
        else
            throw jsonrpc::JsonRpcException(
                jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString() );
    }
};

#endif  // JSONRPC_CPP_STUB_STATUSCLIENT_H_
