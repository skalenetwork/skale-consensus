name: Build and test skale-consensus
on: 
  push:
    branches-ignore:
      - 'docs*'
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:

    - name: checkout
      uses: actions/checkout@v1

    - name: submodule update
      run: git submodule update --init --recursive


    - name: ls
      run: ls

    - name: update apt
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test; sudo apt-get update

    - name: Free disk space
      run: |
        sudo apt-get remove -yq cmake libjsoncpp-dev aria2 ansible azure-cli shellcheck rpm xorriso zsync \
          clang-6.0 lldb-6.0 lld-6.0 clang-format-6.0 clang-8 lldb-8 lld-8 clang-format-8 \
          clang-9 lldb-9 lld-9 clangd-9 clang-format-9 dotnet-sdk-3.0 dotnet-sdk-3.1=3.1.101-1 \
          esl-erlang firefox g++-8 g++-9 gfortran-8 gfortran-9 google-chrome-stable \
          || true >/dev/null 2>&1;

    - name: Free more disk space
      run: |
        sudo apt-get remove  -yq  \
          google-cloud-sdk ghc-8.0.2 ghc-8.2.2 ghc-8.4.4 ghc-8.6.2 ghc-8.6.3 ghc-8.6.4 \
          ghc-8.6.5 ghc-8.8.1 ghc-8.8.2 ghc-8.8.3 ghc-8.10.1 cabal-install-2.0 cabal-install-2.2 \
          cabal-install-2.4 cabal-install-3.0 cabal-install-3.2 heroku imagemagick \
          libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
          mercurial apt-transport-https mono-complete mysql-client libmysqlclient-dev \
          mysql-server mssql-tools unixodbc-dev yarn bazel chrpath libssl-dev libxft-dev \
          libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev php7.1 php7.1-bcmath \
          php7.1-bz2 php7.1-cgi php7.1-cli php7.1-common php7.1-curl php7.1-dba php7.1-dev \
          php7.1-enchant php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-interbase php7.1-intl \
          php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql php7.1-odbc \
          php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-readline php7.1-recode \
          php7.1-snmp php7.1-soap php7.1-sqlite3 php7.1-sybase php7.1-tidy php7.1-xml \
          php7.1-xmlrpc php7.1-xsl php7.1-zip php7.2 php7.2-bcmath php7.2-bz2 php7.2-cgi \
          php7.2-cli php7.2-common php7.2-curl php7.2-dba php7.2-dev php7.2-enchant php7.2-fpm \
          php7.2-gd php7.2-gmp php7.2-imap php7.2-interbase php7.2-intl php7.2-json php7.2-ldap \
          php7.2-mbstring php7.2-mysql php7.2-odbc php7.2-opcache php7.2-pgsql php7.2-phpdbg \
          php7.2-pspell php7.2-readline php7.2-recode php7.2-snmp php7.2-soap php7.2-sqlite3 \
          php7.2-sybase php7.2-tidy php7.2-xml php7.2-xmlrpc php7.2-xsl php7.2-zip php7.3 \
          php7.3-bcmath php7.3-bz2 php7.3-cgi php7.3-cli php7.3-common php7.3-curl php7.3-dba \
          php7.3-dev php7.3-enchant php7.3-fpm php7.3-gd php7.3-gmp php7.3-imap php7.3-interbase \
          php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-odbc \
          php7.3-opcache php7.3-pgsql php7.3-phpdbg php7.3-pspell php7.3-readline php7.3-recode \
          php7.3-snmp php7.3-soap php7.3-sqlite3 php7.3-sybase php7.3-tidy php7.3-xml \
          php7.3-xmlrpc php7.3-xsl php7.3-zip php7.4 php7.4-bcmath php7.4-bz2 php7.4-cgi \
          php7.4-cli php7.4-common php7.4-curl php7.4-dba php7.4-dev php7.4-enchant php7.4-fpm \
          php7.4-gd php7.4-gmp php7.4-imap php7.4-interbase php7.4-intl php7.4-json php7.4-ldap \
          php7.4-mbstring php7.4-mysql php7.4-odbc php7.4-opcache php7.4-pgsql php7.4-phpdbg \
          php7.4-pspell php7.4-readline php7.4-snmp php7.4-soap php7.4-sqlite3 php7.4-sybase \
          php7.4-tidy php7.4-xml php7.4-xmlrpc php7.4-xsl php7.4-zip php-amqp php-apcu \
          php-igbinary php-memcache php-memcached php-mongodb php-redis php-xdebug \
          php-zmq snmp pollinate libpq-dev postgresql-client powershell ruby-full \
          sphinxsearch subversion mongodb-org \
          || true > /dev/null 2>&1;

    - name: Cleanup
      run: |
        sudo apt-get autoremove -y >/dev/null 2>&1
        sudo apt-get autoclean -y >/dev/null 2>&1
        sudo rm -rf /usr/local/lib/android >/dev/null 2>&1
        sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1

    - name: try docker compose
      run: |
        # cd sgxwallet/run_sgx_sim && docker-compose pull && docker-compose up -d
        cd sgxwallet/run_sgx_sim
        echo " --------------------------- stopping sgx wallet ------------------------------------------------------------------------------------------------------ "
        docker-compose down
        echo " --------------------------- fixing sgx wallets docker config ----------------------------------------------------------------------------------------- "
        mv docker-compose.yml docker-compose.yml.old-previous || true
        echo "version: '3'" > docker-compose.yml
        echo "services:" >> docker-compose.yml
        echo "  sgxwallet:" >> docker-compose.yml
        echo "    image: skalenetwork/sgxwallet_sim:develop-latest" >> docker-compose.yml
        echo "    ports:" >> docker-compose.yml
        echo '      - "1026:1026"' >> docker-compose.yml
        echo '      - "1027:1027"' >> docker-compose.yml
        echo '      - "1028:1028"' >> docker-compose.yml
        echo '      - "1029:1029"' >> docker-compose.yml
        echo "    volumes:" >> docker-compose.yml
        echo "      - ./sgx_data:/usr/src/sdk/sgx_data" >> docker-compose.yml
        echo "      -  /dev/urandom:/dev/random" >> docker-compose.yml
        echo "    logging:" >> docker-compose.yml
        echo "      driver: json-file" >> docker-compose.yml
        echo "      options:" >> docker-compose.yml
        echo '        max-size: "10m"' >> docker-compose.yml
        echo '        max-file: "4"' >> docker-compose.yml
        echo "    restart: unless-stopped" >> docker-compose.yml
        echo "    command: -s -y -V -d " >> docker-compose.yml
        echo " --------------------------- pulling sgx wallet ------------------------------------------------------------------------------------------------------- "
        docker-compose pull

    - name: install cmake
      run: |
        wget --no-check-certificate https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.sh && \
        chmod +x cmake-3.10.0-Linux-x86_64.sh && \
        ./cmake-3.10.0-Linux-x86_64.sh --skip-license --include-subdir && \
        sudo ln -sf `pwd`/cmake-3.10.0-Linux-x86_64/bin/* /usr/local/bin

    - name: install packages
      run: |
        sudo apt-get -y install software-properties-common; sudo apt-add-repository universe; \
        sudo apt-get update; sudo apt-get -y install -y software-properties-common apt-utils libprocps-dev \
        gcc-9 g++-9 valgrind gawk sed libffi-dev ccache libgoogle-perftools-dev flex \
        bison yasm texinfo \
        autotools-dev autogen automake autoconf m4 shtool pkg-config sed gawk yasm nasm \
        python3 python3-pip \
        libtool build-essential \
        libgcrypt20-dev
        # python python-pip
        # python-is-python3

    - name: Use g++-9 and gcov-9 by default
      run: |
        echo "Updating all needed alternatives"
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9
        sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 9
        sudo update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 9
        sudo update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 9
        echo "Checking alternative for gcc"
        which gcc
        gcc --version
        echo "Checking alternative for g++"
        which g++
        g++ --version
        echo "Checking alternative for gcov"
        which gcov
        gcov --version
        echo "Checking alternative for gcov-dump"
        which gcov-dump
        gcov-dump --version
        echo "Checking alternative for gcov-tool"
        which gcov-tool
        gcov-tool --version

    - name: Get newest lcov
      run: |
        echo "Removing previous lcov version..."
        sudo apt-get remove lcov || true
        echo "Installing newest lcov version..."
        rm -rf newer_lcov || true
        mkdir newer_lcov
        cd newer_lcov
        git clone https://github.com/linux-test-project/lcov --recursive --recurse-submodules
        cd lcov
        sudo make install
        cd ..
        cd ..
        echo "Checking installed lcov version..."
        which lcov
        lcov --version

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
        restore-keys: |
              ${ { matrix.config.name } }-ccache-
    - name: build dependencies
      run: |
        sudo apt-get install -y nettle-dev gnutls-dev
        cd deps && ./build.sh && cd ..

    - name: verify jsonrpc has been built
      run: ls libBLS/deps/deps_inst/x86_or_x64/include/jsonrpccpp/client.h

    - name: build consensus
      run: |
        cd scripts && ./build.py Debug > /tmp/log_of_build.txt   2>&1 || ( tail -1000 /tmp/log_of_build.txt && false );

    - name: run tests
      run: cd scripts && export CI_BUILD=1 && ./tests.py && cd ..


